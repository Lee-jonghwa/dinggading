/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.13.0-SNAPSHOT).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.mickey.dinggading.api;

import com.mickey.dinggading.model.Owner;
import com.mickey.dinggading.model.OwnerFields;
import com.mickey.dinggading.model.ProblemDetail;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;


import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@Validated

@RestController
public interface OwnerApi {

    /**
     * POST /owners : Adds a pet owner
     * Records the details of a new pet owner.
     *
     * @param ownerFields The pet owner (required)
     * @return The pet owner was successfully added. (status code 201)
     *         or Bad request. (status code 400)
     *         or Server error. (status code 500)
     */

    @PostMapping(
        value = "/owners",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<?> addOwner( @Valid @RequestBody OwnerFields ownerFields);


    /**
     * DELETE /owners/{ownerId} : Delete an owner by ID
     * Returns the owner or a 404 error.
     *
     * @param ownerId The ID of the owner. (required)
     * @return Owner details found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     *         or Owner  not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @DeleteMapping(
        value = "/owners/{ownerId}",
        produces = { "application/json" }
    )
    ResponseEntity<?> deleteOwner(@Min(0) @PathVariable("ownerId") Integer ownerId);


    /**
     * GET /owners/{ownerId} : Get a pet owner by ID
     * Returns the pet owner or a 404 error.
     *
     * @param ownerId The ID of the pet owner. (required)
     * @return Owner details found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     *         or Owner not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @GetMapping(
        value = "/owners/{ownerId}",
        produces = { "application/json" }
    )
    ResponseEntity<?> getOwner(@Min(0) @PathVariable("ownerId") Integer ownerId);


    /**
     * GET /owners : Lists pet owners
     * Returns an array of pet owners.
     *
     * @param lastName Last name. (optional)
     * @return Owner details found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Server error. (status code 500)
     */

    @GetMapping(
        value = "/owners",
        produces = { "application/json" }
    )
    ResponseEntity<?> listOwners( @Valid @RequestParam(value = "lastName", required = false) String lastName);


    /**
     * PUT /owners/{ownerId} : Update a pet owner&#39;s details
     * Updates the pet owner record with the specified details.
     *
     * @param ownerId The ID of the pet owner. (required)
     * @param ownerFields The pet owner details to use for the update. (required)
     * @return Update successful. (status code 200)
     *         or Bad request. (status code 400)
     *         or Owner not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @PutMapping(
        value = "/owners/{ownerId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<?> updateOwner(@Min(0) @PathVariable("ownerId") Integer ownerId, @Valid @RequestBody OwnerFields ownerFields);

}
