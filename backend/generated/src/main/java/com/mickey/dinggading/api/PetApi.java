/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.13.0-SNAPSHOT).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.mickey.dinggading.api;

import com.mickey.dinggading.model.Pet;
import com.mickey.dinggading.model.PetFields;
import com.mickey.dinggading.model.ProblemDetail;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;


import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@Validated

@RestController
public interface PetApi {

    /**
     * POST /pets : Create a pet
     * Creates a pet .
     *
     * @param pet The pet (required)
     * @return Pet type created successfully. (status code 201)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     *         or Pet not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @PostMapping(
        value = "/pets",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<?> addPet( @Valid @RequestBody Pet pet);


    /**
     * POST /owners/{ownerId}/pets : Adds a pet to an owner
     * Records the details of a new pet.
     *
     * @param ownerId The ID of the pet owner. (required)
     * @param petFields The details of the new pet. (required)
     * @return The pet was successfully added. (status code 201)
     *         or Bad request. (status code 400)
     *         or Pet or Owner not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @PostMapping(
        value = "/owners/{ownerId}/pets",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<?> addPetToOwner(@Min(0) @PathVariable("ownerId") Integer ownerId, @Valid @RequestBody PetFields petFields);


    /**
     * DELETE /pets/{petId} : Delete a pet by ID
     * Returns the pet or a 404 error.
     *
     * @param petId The ID of the pet. (required)
     * @return Pet details found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     *         or Pet not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @DeleteMapping(
        value = "/pets/{petId}",
        produces = { "application/json" }
    )
    ResponseEntity<?> deletePet(@Min(0) @PathVariable("petId") Integer petId);


    /**
     * GET /owners/{ownerId}/pets/{petId} : Get a pet by ID
     * Returns the pet or a 404 error.
     *
     * @param ownerId The ID of the pet owner. (required)
     * @param petId The ID of the pet. (required)
     * @return Pet details found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     *         or Owner or pet not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @GetMapping(
        value = "/owners/{ownerId}/pets/{petId}",
        produces = { "application/json" }
    )
    ResponseEntity<?> getOwnersPet(@Min(0) @PathVariable("ownerId") Integer ownerId,@Min(0) @PathVariable("petId") Integer petId);


    /**
     * GET /pets/{petId} : Get a pet by ID
     * Returns the pet  or a 404 error.
     *
     * @param petId The ID of the pet. (required)
     * @return Pet details found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     *         or Pet not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @GetMapping(
        value = "/pets/{petId}",
        produces = { "application/json" }
    )
    ResponseEntity<?> getPet(@Min(0) @PathVariable("petId") Integer petId);


    /**
     * GET /pets : Lists pet
     * Returns an array of pet .
     *
     * @return Pet types found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Server error. (status code 500)
     */

    @GetMapping(
        value = "/pets",
        produces = { "application/json" }
    )
    ResponseEntity<?> listPets();


    /**
     * PUT /owners/{ownerId}/pets/{petId} : Update a pet&#39;s details
     * Updates the pet record with the specified details.
     *
     * @param ownerId The ID of the pet owner. (required)
     * @param petId The ID of the pet. (required)
     * @param petFields The pet details to use for the update. (required)
     * @return Update successful. (status code 204)
     *         or Bad request. (status code 400)
     *         or Pet not found for this owner. (status code 404)
     *         or Server error. (status code 500)
     */

    @PutMapping(
        value = "/owners/{ownerId}/pets/{petId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<?> updateOwnersPet(@Min(0) @PathVariable("ownerId") Integer ownerId,@Min(0) @PathVariable("petId") Integer petId, @Valid @RequestBody PetFields petFields);


    /**
     * PUT /pets/{petId} : Update a pet by ID
     * Returns the pet or a 404 error.
     *
     * @param petId The ID of the pet. (required)
     * @param pet The pet (required)
     * @return Pet details found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     *         or Pet not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @PutMapping(
        value = "/pets/{petId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<?> updatePet(@Min(0) @PathVariable("petId") Integer petId, @Valid @RequestBody Pet pet);

}
