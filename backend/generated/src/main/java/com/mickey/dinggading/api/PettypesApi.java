/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.13.0-SNAPSHOT).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.mickey.dinggading.api;

import com.mickey.dinggading.model.PetType;
import com.mickey.dinggading.model.PetTypeFields;
import com.mickey.dinggading.model.ProblemDetail;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;


import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@Validated

@RestController
public interface PettypesApi {

    /**
     * POST /pettypes : Create a pet type
     * Creates a pet type .
     *
     * @param petTypeFields The pet type (required)
     * @return Pet type created successfully. (status code 200)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     *         or Pet Type not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @PostMapping(
        value = "/pettypes",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<?> addPetType( @Valid @RequestBody PetTypeFields petTypeFields);


    /**
     * DELETE /pettypes/{petTypeId} : Delete a pet type by ID
     * Returns the pet type or a 404 error.
     *
     * @param petTypeId The ID of the pet type. (required)
     * @return Pet type details found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     *         or Pet type not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @DeleteMapping(
        value = "/pettypes/{petTypeId}",
        produces = { "application/json" }
    )
    ResponseEntity<?> deletePetType(@Min(0) @PathVariable("petTypeId") Integer petTypeId);


    /**
     * GET /pettypes/{petTypeId} : Get a pet type by ID
     * Returns the pet type or a 404 error.
     *
     * @param petTypeId The ID of the pet type. (required)
     * @return Pet type details found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     *         or Pet Type not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @GetMapping(
        value = "/pettypes/{petTypeId}",
        produces = { "application/json" }
    )
    ResponseEntity<?> getPetType(@Min(0) @PathVariable("petTypeId") Integer petTypeId);


    /**
     * GET /pettypes : Lists pet types
     * Returns an array of pet types.
     *
     * @return Pet types found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Server error. (status code 500)
     */

    @GetMapping(
        value = "/pettypes",
        produces = { "application/json" }
    )
    ResponseEntity<?> listPetTypes();


    /**
     * PUT /pettypes/{petTypeId} : Update a pet type by ID
     * Returns the pet type or a 404 error.
     *
     * @param petTypeId The ID of the pet type. (required)
     * @param petType The pet type (required)
     * @return Pet type details found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     *         or Pet Type not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @PutMapping(
        value = "/pettypes/{petTypeId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<?> updatePetType(@Min(0) @PathVariable("petTypeId") Integer petTypeId, @Valid @RequestBody PetType petType);

}
