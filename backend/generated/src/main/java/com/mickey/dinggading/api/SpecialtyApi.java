/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.13.0-SNAPSHOT).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.mickey.dinggading.api;

import com.mickey.dinggading.model.ProblemDetail;
import com.mickey.dinggading.model.Specialty;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;


import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@Validated

@RestController
public interface SpecialtyApi {

    /**
     * POST /specialties : Create a specialty
     * Creates a specialty .
     *
     * @param specialty The specialty (required)
     * @return Specialty created successfully. (status code 200)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     *         or Specialty not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @PostMapping(
        value = "/specialties",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<?> addSpecialty( @Valid @RequestBody Specialty specialty);


    /**
     * DELETE /specialties/{specialtyId} : Delete a specialty by ID
     * Returns the specialty or a 404 error.
     *
     * @param specialtyId The ID of the specialty. (required)
     * @return Specialty details found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     *         or Specialty not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @DeleteMapping(
        value = "/specialties/{specialtyId}",
        produces = { "application/json" }
    )
    ResponseEntity<?> deleteSpecialty(@Min(0) @PathVariable("specialtyId") Integer specialtyId);


    /**
     * GET /specialties/{specialtyId} : Get a specialty by ID
     * Returns the specialty or a 404 error.
     *
     * @param specialtyId The ID of the speciality. (required)
     * @return Specialty details found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     *         or Specialty not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @GetMapping(
        value = "/specialties/{specialtyId}",
        produces = { "application/json" }
    )
    ResponseEntity<?> getSpecialty(@Min(0) @PathVariable("specialtyId") Integer specialtyId);


    /**
     * GET /specialties : Lists specialties
     * Returns an array of specialty .
     *
     * @return Specialties found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Server error. (status code 500)
     */

    @GetMapping(
        value = "/specialties",
        produces = { "application/json" }
    )
    ResponseEntity<?> listSpecialties();


    /**
     * PUT /specialties/{specialtyId} : Update a specialty by ID
     * Returns the specialty or a 404 error.
     *
     * @param specialtyId The ID of the specialty. (required)
     * @param specialty The pet (required)
     * @return Specialty details found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     *         or Specialty not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @PutMapping(
        value = "/specialties/{specialtyId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<?> updateSpecialty(@Min(0) @PathVariable("specialtyId") Integer specialtyId, @Valid @RequestBody Specialty specialty);

}
