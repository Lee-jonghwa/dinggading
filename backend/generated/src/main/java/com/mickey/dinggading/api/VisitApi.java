/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.13.0-SNAPSHOT).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.mickey.dinggading.api;

import com.mickey.dinggading.model.ProblemDetail;
import com.mickey.dinggading.model.Visit;
import com.mickey.dinggading.model.VisitFields;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;


import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@Validated

@RestController
public interface VisitApi {

    /**
     * POST /visits : Create a visit
     * Creates a visit.
     *
     * @param visit The visit (required)
     * @return visit created successfully. (status code 200)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     *         or Visit not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @PostMapping(
        value = "/visits",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<?> addVisit( @Valid @RequestBody Visit visit);


    /**
     * POST /owners/{ownerId}/pets/{petId}/visits : Adds a vet visit
     * Records the details of a new vet visit.
     *
     * @param ownerId The ID of the pet owner. (required)
     * @param petId The ID of the pet. (required)
     * @param visitFields The details of the new vet visit. (required)
     * @return The vet visit was successfully added. (status code 201)
     *         or Bad request. (status code 400)
     *         or Pet not found for this owner. (status code 404)
     *         or Server error. (status code 500)
     */

    @PostMapping(
        value = "/owners/{ownerId}/pets/{petId}/visits",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<?> addVisitToOwner(@Min(0) @PathVariable("ownerId") Integer ownerId,@Min(0) @PathVariable("petId") Integer petId, @Valid @RequestBody VisitFields visitFields);


    /**
     * DELETE /visits/{visitId} : Delete a visit by ID
     * Returns the visit or a 404 error.
     *
     * @param visitId The ID of the visit. (required)
     * @return Visit details found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     *         or Visit not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @DeleteMapping(
        value = "/visits/{visitId}",
        produces = { "application/json" }
    )
    ResponseEntity<?> deleteVisit(@Min(0) @PathVariable("visitId") Integer visitId);


    /**
     * GET /visits/{visitId} : Get a visit by ID
     * Returns the visit or a 404 error.
     *
     * @param visitId The ID of the visit. (required)
     * @return Visit details found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     *         or Visit not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @GetMapping(
        value = "/visits/{visitId}",
        produces = { "application/json" }
    )
    ResponseEntity<?> getVisit(@Min(0) @PathVariable("visitId") Integer visitId);


    /**
     * GET /visits : Lists visits
     * Returns an array of visit .
     *
     * @return visits found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Server error. (status code 500)
     */

    @GetMapping(
        value = "/visits",
        produces = { "application/json" }
    )
    ResponseEntity<?> listVisits();


    /**
     * PUT /visits/{visitId} : Update a visit by ID
     * Returns the visit or a 404 error.
     *
     * @param visitId The ID of the visit. (required)
     * @param visit The visit (required)
     * @return Visit details found and returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     *         or Visit not found. (status code 404)
     *         or Server error. (status code 500)
     */

    @PutMapping(
        value = "/visits/{visitId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<?> updateVisit(@Min(0) @PathVariable("visitId") Integer visitId, @Valid @RequestBody Visit visit);

}
