services:
  openapi-merger:
    build:
      context: .
      dockerfile: ./infra/dockerfiles/merger.Dockerfile
    volumes:
      #- ./docs:/merged
      - shared-data:/merged/output
    restart: "no"

  spring-generator:
    build:
      context: .
      dockerfile: ./infra/dockerfiles/generator.Dockerfile
    volumes:
      - shared-data:/openapi/input
      - ./backend/generated:/backend
    command:
      - "generate"
      - "-i"
      - "./input/openapi.yaml"
      - "-g"
      - "spring"
      - "-o"
      - "/backend"
      - "-t"
      - "spring-custom-generator/custom-codegen"
      - "-c"
      - "spring-custom-generator/config.json"
    depends_on:
      openapi-merger:
        condition: service_completed_successfully
    restart: "no"

  axios-generator:
    build:
      context: .
      dockerfile: ./infra/dockerfiles/generator.Dockerfile
    volumes:
      - shared-data:/openapi/input
      - ./frontend/generated:/frontend
    command:
      - "generate"
      - "-i"
      - "./input/openapi.yaml"
      - "-g"
      - "typescript-axios"
      - "-o"
      - "/frontend"
      - "-t"
      - "axios-custom-generator/custom-codegen"
      - "-c"
      - "axios-custom-generator/config.json"
    restart: "no"
    depends_on:
      openapi-merger:
        condition: service_completed_successfully

  next:
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./infra/dockerfiles/frontend.Dockerfile
      args:
        - STAGE=development
        - NEXT_PUBLIC_API_BASE_URL=spring:8080
        - NEXT_PUBLIC_ENV_MODE=DEVELOP_LOCAL

    depends_on:
      spring-generator:
        condition: service_completed_successfully
    ports:
      - "3000:3000"

  spring:
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./infra/dockerfiles/backend.Dockerfile
      args:
        - STAGE=development
    depends_on:
      mysql:
        condition: service_healthy
      spring-generator:
        condition: service_completed_successfully
    env_file:
      - ./infra/env/.env.development.local
    ports:
      - "8080:8080"

  mysql:
    platform: linux/amd64
    image: mysql:8.0
    env_file: ./infra/env/.env.development.local
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD']
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 30s
    restart: always
    
  nginx:
    platform: linux/amd64
    build:
      context: ./nginx
      dockerfile: ../infra/dockerfiles/nginx.Dockerfile
    ports:
      - "80:80"
    depends_on:
      - next
      - spring

volumes:
  shared-data:  # 공유 볼륨 정의