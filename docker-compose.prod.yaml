# 운영 환경 사용할 도커 컴포즈 파일

services:
  spring:
    platform: linux/amd64
    image: wnsgh712/s12p21e107-spring:latest
    env_file: ./infra/env/.env.production
    restart: unless-stopped
    networks:
      - ding-ga-ding-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 20s

  next:
    platform: linux/amd64
    restart: unless-stopped
    image: wnsgh712/s12p21e107-next:latest
    networks:
      - ding-ga-ding-network
  
  fastapi:
    platform: linux/amd64
    restart: unless-stopped
    image: wnsgh712/s12p21e107-fastapi:latest
    command: uvicorn ai.app.main:app --host 0.0.0.0 --port 8000 --reload
    env_file: ./infra/env/.env.production
    environment:
      - ENV_MODE=production
      - PYTHONPATH=/app
    networks:
      - ding-ga-ding-network
    ports:
      - "8000:8000"

  celery_worker:
    platform: linux/amd64
    restart: unless-stopped
    image: wnsgh712/s12p21e107-celery:latest
    command: celery -A ai.celery_worker:celery worker --loglevel=info
    env_file: ./infra/env/.env.production
    environment:
      - ENV_MODE=production
      - PYTHONPATH=/app
    networks:
      - ding-ga-ding-network
    

  fastapi:
    platform: linux/amd64
    restart: unless-stopped
    build:
      context: . # 루트 기준
      dockerfile: ./infra/dockerfiles/ai.Dockerfile
      target: production
      # production 스테이지까지만 사용
      args:
        - STAGE=production
    command: uvicorn ai.app.main:app --host 0.0.0.0 --port 8000 --reload
    env_file:
      - ./infra/env/.env.production
    environment:
      - ENV_MODE=production
      - PYTHONPATH=/app
    networks:
      - ding-ga-ding-network
    ports:
      - "8000:8000"

  celery_worker:
    platform: linux/amd64
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./infra/dockerfiles/ai.Dockerfile
      target: production
      args:
        - STAGE=production
    command: celery -A ai.celery_worker:celery worker --loglevel=info
    env_file:
      - ./infra/env/.env.production
    environment:
      - ENV_MODE=production
      - PYTHONPATH=/app
    networks:
      - ding-ga-ding-network
networks:
  ding-ga-ding-network:
    external: true
