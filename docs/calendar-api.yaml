openapi: 3.0.0
info:
  title: 딩가딩 Calendar API
  version: 1.0.0
  description: "일정 관리 및 달력 관련 API 명세서"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "JWT 인증 토큰을 사용합니다. 예: Bearer {token}"

  parameters:
    # 경로 파라미터 모음
    MemberId:
      name: memberId
      in: path
      description: "회원 ID"
      required: true
      schema:
        type: string
        format: uuid

    BandId:
      name: bandId
      in: path
      description: "밴드 ID"
      required: true
      schema:
        type: integer
        format: int64

    CalendarId:
      name: calendarId
      in: path
      description: "달력 ID"
      required: true
      schema:
        type: integer
        format: int64

    EventId:
      name: eventId
      in: path
      description: "일정 ID"
      required: true
      schema:
        type: integer
        format: int64

    # 쿼리 파라미터 모음
    StartDateParam:
      name: startDate
      in: query
      description: "조회 시작 날짜 (yyyy-MM-dd)"
      required: false
      schema:
        type: string
        format: date

    EndDateParam:
      name: endDate
      in: query
      description: "조회 종료 날짜 (yyyy-MM-dd)"
      required: false
      schema:
        type: string
        format: date

  schemas:
    # 에러 응답 스키마
    ProblemDetail:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string

    # 열거형 정의
    OwnerTypeEnum:
      type: string
      enum: [MEMBER, BAND]
      description: "소유자 유형 (회원 또는 밴드)"

    # 기본 DTO 스키마
    CalendarDTO:
      type: object
      properties:
        calendarId:
          type: integer
          format: int64
          description: "달력 ID"
        ownerId:
          type: string
          format: uuid
          description: "소유자 ID (회원 또는 밴드)"
        ownerType:
          $ref: '#/components/schemas/OwnerTypeEnum'
        name:
          type: string
          description: "달력 이름"
      required:
        - calendarId
        - ownerId
        - ownerType
        - name

    ScheduleDTO:
      type: object
      properties:
        scheduleId:
          type: integer
          format: int64
          description: "일정 ID"
        calendarId:
          type: integer
          format: int64
          description: "달력 ID"
        title:
          type: string
          description: "일정 제목"
        eventTime:
          type: string
          format: date-time
          description: "일정 시간"
        location:
          type: string
          description: "장소"
        description:
          type: string
          description: "일정 설명"
        sticker:
          type: string
          description: "스티커 이미지"
        createdBy:
          type: string
          format: uuid
          description: "생성자 ID"
        createdAt:
          type: string
          format: date-time
          description: "생성 시간"
        updatedAt:
          type: string
          format: date-time
          description: "수정 시간"
      required:
        - scheduleId
        - calendarId
        - title
        - eventTime

    MemberCalendarDTO:
      type: object
      properties:
        memberCalendarId:
          type: integer
          format: int64
          description: "회원 달력 ID"
        memberId:
          type: string
          format: uuid
          description: "회원 ID"
        calendarId:
          type: integer
          format: int64
          description: "달력 ID"
        nickname:
          type: string
          description: "회원 닉네임"
        profileImgUrl:
          type: string
          description: "회원 프로필 이미지"
      required:
        - memberCalendarId
        - memberId
        - calendarId

    BandCalendarDTO:
      type: object
      properties:
        bandCalendarId:
          type: integer
          format: int64
          description: "밴드 달력 ID"
        bandId:
          type: integer
          format: int64
          description: "밴드 ID"
        calendarId:
          type: integer
          format: int64
          description: "달력 ID"
        bandName:
          type: string
          description: "밴드 이름"
        profileImgUrl:
          type: string
          description: "밴드 프로필 이미지"
      required:
        - bandCalendarId
        - bandId
        - calendarId

    # 복합 응답 스키마
    MemberCalendarWithEventsDTO:
      type: object
      properties:
        calendar:
          $ref: '#/components/schemas/MemberCalendarDTO'
        events:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleDTO'
      required:
        - calendar
        - events

    BandCalendarWithEventsDTO:
      type: object
      properties:
        calendar:
          $ref: '#/components/schemas/BandCalendarDTO'
        events:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleDTO'
      required:
        - calendar
        - events

  # 요청 본문 정의
  requestBodies:
    CreateEventRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
                description: "일정 제목"
              eventTime:
                type: string
                format: date-time
                description: "일정 시간"
              location:
                type: string
                description: "장소"
              description:
                type: string
                description: "일정 설명"
              sticker:
                type: string
                description: "스티커 이미지"
            required:
              - title
              - eventTime

    UpdateEventRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
                description: "일정 제목"
              eventTime:
                type: string
                format: date-time
                description: "일정 시간"
              location:
                type: string
                description: "장소"
              description:
                type: string
                description: "일정 설명"
              sticker:
                type: string
                description: "스티커 이미지"

  # 응답 정의
  responses:
    # 성공 응답
    SuccessNoContent:
      description: "성공적으로 처리되었습니다."
      content: {}

    # 비즈니스 응답
    CalendarResponse:
      description: "달력 정보"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CalendarDTO'

    ScheduleResponse:
      description: "일정 정보"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduleDTO'

    ScheduleListResponse:
      description: "일정 목록"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ScheduleDTO'

    MemberCalendarResponse:
      description: "회원 달력 정보"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MemberCalendarDTO'

    BandCalendarResponse:
      description: "밴드 달력 정보"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BandCalendarDTO'

    MemberCalendarWithEventsResponse:
      description: "개인 달력 및 일정 정보"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MemberCalendarWithEventsDTO'

    BandCalendarWithEventsResponse:
      description: "밴드 달력 및 일정 정보"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BandCalendarWithEventsDTO'

    # 에러 응답
    NotFoundException:
      description: "요청한 리소스를 찾을 수 없습니다."
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ProblemDetail'
              - type: object
                properties:
                  title:
                    type: string
                    example: "리소스를 찾을 수 없습니다."

    BadRequestException:
      description: "잘못된 요청입니다."
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ProblemDetail'
              - type: object
                properties:
                  title:
                    type: string
                    example: "잘못된 요청입니다."

    UnauthorizedException:
      description: "인증되지 않은 요청입니다."
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ProblemDetail'
              - type: object
                properties:
                  title:
                    type: string
                    example: "인증되지 않은 요청입니다."

    ForbiddenException:
      description: "접근 권한이 없습니다."
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ProblemDetail'
              - type: object
                properties:
                  title:
                    type: string
                    example: "접근 권한이 없습니다."

security:
  - BearerAuth: []

paths:
  /members/{memberId}/calendar:
    get:
      tags:
        - Calendar
      operationId: getMemberCalendar
      summary: "개인 달력 조회"
      description: "회원의 개인 달력 정보와 일정을 조회합니다."
      parameters:
        - $ref: '#/components/parameters/MemberId'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
      responses:
        '200':
          $ref: '#/components/responses/MemberCalendarWithEventsResponse'
        '403':
          $ref: '#/components/responses/ForbiddenException'
        '404':
          $ref: '#/components/responses/NotFoundException'

  /bands/{bandId}/calendar:
    get:
      tags:
        - Calendar
      operationId: getBandCalendar
      summary: "밴드 달력 조회"
      description: "밴드의 달력 정보와 일정을 조회합니다."
      parameters:
        - $ref: '#/components/parameters/BandId'
        - $ref: '#/components/parameters/StartDateParam'
        - $ref: '#/components/parameters/EndDateParam'
      responses:
        '200':
          $ref: '#/components/responses/BandCalendarWithEventsResponse'
        '403':
          $ref: '#/components/responses/ForbiddenException'
        '404':
          $ref: '#/components/responses/NotFoundException'

  /calendars/{calendarId}/events:
    post:
      tags:
        - Event
      operationId: createEvent
      summary: "일정 추가"
      description: "달력에 새로운 일정을 추가합니다."
      parameters:
        - $ref: '#/components/parameters/CalendarId'
      requestBody:
        $ref: '#/components/requestBodies/CreateEventRequest'
      responses:
        '201':
          $ref: '#/components/responses/ScheduleResponse'
        '400':
          $ref: '#/components/responses/BadRequestException'
        '403':
          $ref: '#/components/responses/ForbiddenException'
        '404':
          $ref: '#/components/responses/NotFoundException'

  /calendars/{calendarId}/events/{eventId}:
    patch:
      tags:
        - Event
      operationId: updateEvent
      summary: "일정 수정"
      description: "달력의 특정 일정을 수정합니다."
      parameters:
        - $ref: '#/components/parameters/CalendarId'
        - $ref: '#/components/parameters/EventId'
      requestBody:
        $ref: '#/components/requestBodies/UpdateEventRequest'
      responses:
        '200':
          $ref: '#/components/responses/ScheduleResponse'
        '400':
          $ref: '#/components/responses/BadRequestException'
        '403':
          $ref: '#/components/responses/ForbiddenException'
        '404':
          $ref: '#/components/responses/NotFoundException'

    delete:
      tags:
        - Event
      operationId: deleteEvent
      summary: "일정 삭제"
      description: "달력의 특정 일정을 삭제합니다."
      parameters:
        - $ref: '#/components/parameters/CalendarId'
        - $ref: '#/components/parameters/EventId'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '403':
          $ref: '#/components/responses/ForbiddenException'
        '404':
          $ref: '#/components/responses/NotFoundException'