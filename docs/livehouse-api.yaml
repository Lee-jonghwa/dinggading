openapi: 3.0.0
info:
  title: 딩가딩 Livehouse API
  version: 1.0.0
  description: "라이브하우스 API 명세서"
  contact:
    email: nykim.ssafy2024@gmail.com

servers:
  - url: http://localhost:8080
    description: 스프링 서버
  - url: http://localhost:8081
    description: 목 서버

tags:
  - name: Livehouse
    description: 라이브하우스 관리 관련 API - 개발 완료

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "JWT 인증 토큰을 사용합니다. 예: Bearer {token}"

  parameters:
    livehouseId:
      name: livehouseId
      in: path
      description: "라이브하우스 ID"
      required: true
      schema:
        type: integer
        format: int64

    participantId:
      name: participantId
      in: path
      description: "참가자 ID"
      required: true
      schema:
        type: integer
        format: int64

  schemas:
    ProblemDetail:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string

    CreateLivehouseRequestDTO:
      type: object
      properties:
        title:
          type: string
          description: "방 제목"
        description:
          type: string
          description: "방 설명"
        maxParticipants:
          type: integer
          description: "최대 참가자 수"
          minimum: 2
          maximum: 10
      required:
        - title
        - maxParticipants

    PageableDTO:
      type: object
      properties:
        page:
          type: integer
          description: 현재 페이지 번호
        size:
          type: integer
          description: 페이지 크기
        totalElements:
          type: integer
          description: 전체 요소 수
        totalPages:
          type: integer
          description: 전체 페이지 수
      required:
        - page
        - size
        - totalElements
        - totalPages

    PageLivehouseDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/LivehouseDTO"
        pageable:
          $ref: "#/components/schemas/PageableDTO"
      required:
        - content
        - pageable

    LivehouseDTO:
      description: "라이브하우스 정보"
      type: object
      properties:
        livehouseId:
          type: integer
          format: int64
          description: "라이브하우스 ID"
        title:
          type: string
          description: "방 제목"
        description:
          type: string
          description: "방 설명"
        hostId:
          type: string
          format: uuid
          description: "호스트 ID"
        hostNickname:
          type: string
          description: "호스트 닉네임"
        participantCount:
          type: integer
          format: int32
          description: "참가자 수"
        maxParticipants:
          type: integer
          format: int32
          description: "최대 참가자 수"
        status:
          type: string
          description: "방 상태"
        createdAt:
          type: string
          format: date-time
          description: "방 생성 시간"

    LivehouseSessionDTO:
      description: "라이브하우스 세션 정보"
      type: object
      properties:
        livehouseId:
          type: integer
          format: int64
          description: "라이브하우스 세션 테이블 ID"
          example: 1
        sessionId:
          type: string
          description: "세션 ID"
        token:
          type: string
          description: "커넥션 토큰"
        participantId:
          type: integer
          format: int64
          description: "라이브하우스 참가자 id (long)"
        nickname:
          type: string
          description: "사용자 닉네임"

    ParticipantDTO:
      type: object
      properties:
        participantId:
          type: integer
          format: int64
          description: "참가자 ID"
        livehouseId:
          type: integer
          format: int64
          description: "라이브하우스 세션 테이블 ID"
        nickname:
          type: string
          description: "사용자 닉네임"
        connectionId:
          type: string
          description: "세션 커넥트 ID"
        isHost:
          type: boolean
          description: "방장인지 여부"
        joinedAt:
          type: string
          format: date-time
          description: "참가 시간"

  responses:
    # 에러 응답
    NotFoundException:
      description: "요청한 리소스를 찾을 수 없습니다."
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ProblemDetail"
              - type: object
                properties:
                  title:
                    type: string
                    example: "리소스를 찾을 수 없습니다."

    BadRequestException:
      description: "잘못된 요청입니다."
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ProblemDetail"
              - type: object
                properties:
                  title:
                    type: string
                    example: "잘못된 요청입니다."

    UnauthorizedException:
      description: "인증되지 않은 요청입니다."
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ProblemDetail"
              - type: object
                properties:
                  title:
                    type: string
                    example: "인증되지 않은 요청입니다."

    ForbiddenException:
      description: "접근 권한이 없습니다."
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ProblemDetail"
              - type: object
                properties:
                  title:
                    type: string
                    example: "접근 권한이 없습니다."

    LivehouseSessionCreated:
      description: "라이브하우스 생성 성공"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LivehouseSessionDTO"

    LivehousesListResponse:
      description: "라이브하우스 목록"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PageLivehouseDTO"

    ParticipantListResponse:
      description: "참가자 목록"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ParticipantDTO"

    LivehouseSessionResponse:
      description: "방 세션 정보"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LivehouseSessionDTO"

    LivehouseResponse:
      description: "방 정보"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LivehouseDTO"

    NoContent:
      description: "성공적으로 처리되었습니다"
      content: {}

paths:
  /api/livehouses:
    get:
      tags:
        - Livehouse
      operationId: listLivehouses
      x-spring-paginated: true
      summary: "라이브하우스 전체 목록 조회"
      description: "라이브하우스 전체 목록 조회"
      responses:
        "200":
          $ref: "#/components/responses/LivehousesListResponse"
        "404":
          $ref: "#/components/responses/NotFoundException"
    post:
      tags:
        - Livehouse
      operationId: createLivehouse
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLivehouseRequestDTO"
      responses:
        "201":
          $ref: "#/components/responses/LivehouseSessionCreated"
        "404":
          $ref: "#/components/responses/NotFoundException"

  /api/livehouses/{livehouseId}:
    get:
      tags:
        - Livehouse
      operationId: getLivehouse
      summary: "방 정보 조회"
      parameters:
        - $ref: "#/components/parameters/livehouseId"
      responses:
        "200":
          $ref: "#/components/responses/LivehouseResponse"
        "404":
          $ref: "#/components/responses/NotFoundException"

  /api/livehouses/{livehouseId}/join:
    post:
      tags:
        - Livehouse
      operationId: joinLivehouse
      summary: "방 참가"
      parameters:
        - $ref: "#/components/parameters/livehouseId"
      responses:
        "200":
          $ref: "#/components/responses/LivehouseSessionResponse"
        "404":
          $ref: "#/components/responses/NotFoundException"

  /api/livehouses/{livehouseId}/leave/{participantId}:
    post:
      tags:
        - Livehouse
      operationId: leaveLivehouse
      summary: "방 떠나기"
      parameters:
        - $ref: "#/components/parameters/livehouseId"
        - $ref: "#/components/parameters/participantId"
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "404":
          $ref: "#/components/responses/NotFoundException"

  /api/livehouses/{livehouseId}/close:
    post:
      tags:
        - Livehouse
      operationId: closeLivehouse
      summary: "방 닫기"
      parameters:
        - $ref: "#/components/parameters/livehouseId"
        - name: participantId
          in: query
          description: "참가자 ID"
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "404":
          $ref: "#/components/responses/NotFoundException"

  /api/livehouses/{livehouseId}/participants:
    get:
      tags:
        - Livehouse
      parameters:
        - $ref: "#/components/parameters/livehouseId"
      operationId: listParticipants
      responses:
        "200":
          $ref: "#/components/responses/ParticipantListResponse"
        "404":
          $ref: "#/components/responses/NotFoundException"

  /api/livehouses/search:
    get:
      tags:
        - Livehouse
      x-spring-paginated: true
      operationId: searchLivehouses
      parameters:
        - name: keyword
          in: query
          description: "검색 키워드"
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/LivehousesListResponse"
        "404":
          $ref: "#/components/responses/NotFoundException"
