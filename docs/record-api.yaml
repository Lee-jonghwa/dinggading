openapi: 3.0.0
info:
  title: 딩가딩 Record API
  version: 1.0.0
  description: "딩가딩 서비스의 Record Aggregate와 관련된 API를 정의합니다. 연주 기록, 녹음 데이터, 도전 결과 등을 관리하는 API를 포함합니다."
  contact:
    email: qkrwnsgh71w@gmail.com

servers:
  - url: https://localhost:8080
    description: 스프링 서버
  - url: https://localhost:8081
    description: 목 서버

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "JWT 인증 토큰을 사용합니다. 예: Bearer {token}"

  schemas:
    RecordDTO:
      type: object
      properties:
        recordId:
          type: integer
          description: "녹음 기록 ID"
          example: 12345
        memberId:
          type: string
          format: uuid
          description: "회원 ID"
          example: "7466B6F3-5192-44D1-AA80-375767C166C5"
        challengeId:
          type: integer
          description: "연관된 도전 ID (없을 수도 있음)"
          example: 789
        dtype:
          type: string
          enum: [FIRST, PRACTICE, CHALLENGE, DEFENSE]
          description: "녹음 유형 (배치고사, 연습, 도전, 방어전)"
          example: "CHALLENGE"
        title:
          type: string
          description: "녹음 제목"
          example: "3월 15일 보컬 도전 기록"
        recordUrl:
          type: string
          description: "녹음 파일이 저장된 서버 URL"
          example: "https://dingading-storage.com/records/7466B6F3-5192-44D1-AA80-375767C166C5/vocals/20240315.mp3"
        createdAt:
          type: string
          format: date-time
          description: "녹음 생성 시간"
          example: "2024-03-15T14:30:00Z"
      required:
        - recordId
        - memberId
        - dtype
        - title
        - recordUrl
        - createdAt
  
    # AI 파트에 물어보고 정확하게 수정하기
    RecordAnalysisDTO:
      type: object
      properties:
        recordId:
          type: integer
          description: "녹음 기록 ID"
          example: 12345
        analysisData:
          type: object
          properties:
            strengths:
              type: array
              items:
                type: string
              description: "강점 분석"
              example: ["안정적인 고음 처리", "리듬감이 좋음"]
            weaknesses:
              type: array
              items:
                type: string
              description: "약점 분석"
              example: ["브레스 컨트롤 개선 필요", "특정 구간 음정 불안정"]
            improvements:
              type: array
              items:
                type: string
              description: "개선 제안"
              example: ["호흡 조절 연습 권장", "리듬 패턴 학습 추천"]
            detailedScores:
              type: object
              properties:
                sections:
                  type: array
                  items:
                    type: object
                    properties:
                      section:
                        type: string
                        description: "곡의 구간"
                        example: "코러스"
                      startTime:
                        type: string
                        description: "구간 시작 시간"
                        example: "01:45"
                      endTime:
                        type: string
                        description: "구간 종료 시간"
                        example: "02:15"
                      beatScore:
                        type: integer
                        description: "구간 박자 점수"
                        example: 87
                      tuneScore:
                        type: integer
                        description: "구간 음정 점수"
                        example: 75
                      toneScore:
                        type: integer
                        description: "구간 음색 점수"
                        example: 90
                    required:
                      - section
                      - startTime
                      - endTime
                      - beatScore
                      - tuneScore
                      - toneScore
                performanceGraph:
                  type: object
                  properties:
                    timePoints:
                      type: array
                      items:
                        type: string
                      description: "시간 포인트"
                      example: ["00:00", "00:30", "01:00", "01:30"]
                    scorePoints:
                      type: array
                      items:
                        type: integer
                      description: "해당 시간의 점수"
                      example: [70, 85, 78, 92]
                  required:
                    - timePoints
                    - scorePoints
              required:
                - sections
                - performanceGraph
          required:
            - strengths
            - weaknesses
            - improvements
            - detailedScores
      required:
        - recordId
        - analysisData

    PageableDTO:
      type: object
      properties:
        page:
          type: integer
          description: "현재 페이지 번호"
          example: 0
        size:
          type: integer
          description: "페이지 크기"
          example: 10
        totalElements:
          type: integer
          description: "전체 요소 수"
          example: 42
        totalPages:
          type: integer
          description: "전체 페이지 수"
          example: 5
      required:
        - page
        - size
        - totalElements
        - totalPages

    ProblemDetail:
      title: Problem Detail
      description: 모든 에러 응답에 대한 스키마
      type: object
      properties:
        type:
          title: Type
          description: 에러 응답을 발생시킨 전체 URL
          type: string
          format: uri
          example: 'http://localhost:8080/api/records/12345'
        title:
          title: Title
          description: 짧은 에러 제목
          type: string
          example: 'ResourceNotFoundException'
        status:
          title: Status
          description: HTTP 상태 코드
          type: integer
          format: int32
          minimum: 400
          maximum: 600
          exclusiveMaximum: true
          example: 404
        detail:
          title: Detail
          description: 상세 에러 메시지
          type: string
          example: 'Record with ID 12345 not found'
        timestamp:
          title: Timestamp
          description: 에러 발생 시간
          type: string
          format: date-time
          example: '2024-03-21T14:59:21.3820407Z'
        schemaValidationErrors:
          title: Schema validation errors
          description: OpenAPI 스키마에 대한 유효성 검사 오류
          type: array
          items:
            $ref: '#/components/schemas/ValidationMessage'
      required:
        - type
        - title
        - status
        - detail
        - timestamp

    ValidationMessage:
      title: Validation message
      description: 유효성 검사 오류를 설명하는 메시지
      type: object
      properties:
        message:
          title: Message
          description: 유효성 검사 메시지
          type: string
          example: "[Path '/recordUrl'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])"
      required:
        - message

  parameters:
    RecordId:
      name: recordId
      in: path
      description: "녹음 기록 ID"
      required: true
      schema:
        type: integer
        format: int64

    MemberId:
      name: memberId
      in: path
      description: "회원 ID"
      required: true
      schema:
        type: string
        format: uuid

    ChallengeId:
      name: challengeId
      in: path
      description: "도전 ID"
      required: true
      schema:
        type: integer
        format: int64

  requestBodies:
    CreateRecordRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              memberId:
                type: string
                format: uuid
                description: "회원 ID"
                example: "7466B6F3-5192-44D1-AA80-375767C166C5"
              challengeId:
                type: integer
                description: "연관된 도전 ID (선택 사항)"
                example: 789
              dtype:
                type: string
                enum: [FIRST, PRACTICE, CHALLENGE, DEFENSE]
                description: "녹음 유형"
                example: "PRACTICE"
              title:
                type: string
                description: "녹음 제목"
                example: "3월 15일 연습 세션"
              songTitle:
                type: string
                description: "녹음한 곡 제목"
                example: "Smoke on the Water"
              instrument:
                type: string
                enum: [VOCAL, GUITAR, DRUM, BASS]
                description: "연주 악기"
                example: "GUITAR"
              recordFile:
                type: string
                format: binary
                description: "녹음 파일 (multipart/form-data로 전송)"
            required:
              - memberId
              - dtype
              - title
              - recordFile

#    UpdateRecordRequest:
#      required: true
#      content:
#        application/json:
#          schema:
#            type: object
#            properties:
#              title:
#                type: string
#                description: "녹음 제목"
#                example: "3월 15일 기타 연습 - 수정됨"
#              dtype:
#                type: string
#                enum: [FIRST, PRACTICE, CHALLENGE, DEFENSE]
#                description: "녹음 유형"
#                example: "PRACTICE"
#            required:
#              - title

    ChallengeRecordRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              challengeId:
                type: integer
                description: "도전 ID"
                example: 789
              recordFile:
                type: string
                format: binary
                description: "녹음 파일 (multipart/form-data로 전송)"
              title:
                type: string
                description: "녹음 제목"
                example: "3월 15일 실버 티어 도전"
            required:
              - challengeId
              - recordFile
              - title

  responses:
    RecordResponse:
      description: "녹음 기록 응답"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RecordDTO'

    RecordDetailResponse:
      description: "녹음 기록 상세 응답"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RecordDTO'

    RecordListResponse:
      description: "녹음 기록 목록 응답"
      content:
        application/json:
          schema:
            type: object
            properties:
              content:
                type: array
                items:
                  $ref: '#/components/schemas/RecordDTO'
              pageable:
                $ref: '#/components/schemas/PageableDTO'
            required:
              - content
              - pageable

    RecordAnalysisResponse:
      description: "녹음 분석 결과 응답"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RecordAnalysisDTO'

    BadRequestError:
      description: "잘못된 요청"
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ProblemDetail'
              - type: object
                properties:
                  title:
                    type: string
                    example: "잘못된 요청"
                  status:
                    type: integer
                    example: 400
                  detail:
                    type: string
                    example: "요청 형식이 올바르지 않습니다."

    UnauthorizedError:
      description: "인증 실패"
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ProblemDetail'
              - type: object
                properties:
                  title:
                    type: string
                    example: "인증 실패"
                  status:
                    type: integer
                    example: 401
                  detail:
                    type: string
                    example: "인증 정보가 유효하지 않습니다."

    ForbiddenError:
      description: "접근 권한 없음"
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ProblemDetail'
              - type: object
                properties:
                  title:
                    type: string
                    example: "접근 권한 없음"
                  status:
                    type: integer
                    example: 403
                  detail:
                    type: string
                    example: "해당 리소스에 접근할 권한이 없습니다."

    NotFoundError:
      description: "리소스를 찾을 수 없음"
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ProblemDetail'
              - type: object
                properties:
                  title:
                    type: string
                    example: "리소스를 찾을 수 없음"
                  status:
                    type: integer
                    example: 404
                  detail:
                    type: string
                    example: "요청한 리소스를 찾을 수 없습니다."


security:
  - BearerAuth: []

paths:
  # ==================== 중요도: 상 (핵심 기능) ====================

  /records:
    post:
      tags:
        - Record
      operationId: createRecord
      summary: "새로운 녹음 기록 생성"
      description: "새로운 녹음 기록을 생성합니다. Challenge 결과나 연습 세션을 녹음 데이터와 함께 저장하는 핵심 API입니다."
      requestBody:
        $ref: '#/components/requestBodies/CreateRecordRequest'
      responses:
        '201':
          description: "녹음 기록 생성 성공"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/RecordDTO'
                  - type: object
                    example:
                      recordId: 12345
                      memberId: "7466B6F3-5192-44D1-AA80-375767C166C5"
                      challengeId: null
                      dtype: "PRACTICE"
                      title: "3월 15일 연습 세션"
                      recordUrl: "https://dingading-storage.com/records/7466B6F3-5192-44D1-AA80-375767C166C5/guitars/20240315.mp3"
                      createdAt: "2024-03-15T14:30:00Z"
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /records/{recordId}:
    get:
      tags:
        - Record
      operationId: getRecord
      summary: "녹음 기록 조회"
      description: "특정 녹음 기록의 상세 정보를 조회합니다. 사용자가 자신의 이전 연주를 확인하고 실력 향상을 점검할 수 있는 필수 기능입니다."
      parameters:
        - $ref: '#/components/parameters/RecordId'
      responses:
        '200':
          description: "녹음 기록 조회 성공"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/RecordDTO'
                  - type: object
                    example:
                      recordId: 12345
                      memberId: "7466B6F3-5192-44D1-AA80-375767C166C5"
                      challengeId: 789
                      dtype: "CHALLENGE"
                      title: "3월 15일 보컬 도전 기록"
                      recordUrl: "https://dingading-storage.com/records/7466B6F3-5192-44D1-AA80-375767C166C5/vocals/20240315.mp3"
                      createdAt: "2024-03-15T14:30:00Z"
                      songTitle: "Bohemian Rhapsody"
                      instrument: "VOCAL"
                      score:
                        beat: 85
                        tune: 78
                        tone: 92
                        total: 85
        '404':
          $ref: '#/components/responses/NotFoundError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    put:
      tags:
        - Record
      operationId: updateRecord
      parameters:
        - $ref: '#/components/parameters/RecordId'
      summary: "녹음 정보 업데이트"
      description: "특정 녹음의 정보를 업데이트합니다."
      deprecated: true
      responses:
        '200':
          description: "녹음 정보 업데이트 성공"
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    delete:
      tags:
        - Record
      operationId: deleteRecord
      parameters:
        - $ref: '#/components/parameters/RecordId'
      summary: "녹음 삭제"
      description: "특정 녹음을 삭제합니다."
      deprecated: true
      responses:
        '204':
          description: "녹음 삭제 성공"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  # ==================== 중요도: 중 (주요 기능) ====================

  /members/{memberId}/records:
    get:
      tags:
        - Record
      operationId: getMemberRecords
      summary: "회원의 녹음 기록 목록 조회"
      description: "특정 회원의 모든 녹음 기록을 조회합니다. dtype 파라미터를 사용해 녹음 유형별로 필터링할 수 있으며, 페이지네이션을 지원합니다. page와 size 파라미터를 사용하여 페이지 크기와 페이지 번호를 지정할 수 있습니다."
      parameters:
        - $ref: '#/components/parameters/MemberId'
        - name: dtype
          in: query
          description: "녹음 유형 필터링 (FIRST, PRACTICE, CHALLENGE, DEFENSE)"
          required: false
          schema:
            type: string
            enum: [FIRST, PRACTICE, CHALLENGE, DEFENSE]
      x-spring-paginated: true
      deprecated: true
      responses:
        '200':
          description: "회원의 녹음 기록 목록 조회 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/RecordDTO'
                        - type: object
                          example:
                            recordId: 12345
                            memberId: "7466B6F3-5192-44D1-AA80-375767C166C5"
                            challengeId: 789
                            dtype: "CHALLENGE"
                            title: "3월 15일 보컬 도전 기록"
                            recordUrl: "https://dingading-storage.com/records/7466B6F3-5192-44D1-AA80-375767C166C5/vocals/20240315.mp3"
                            createdAt: "2024-03-15T14:30:00Z"
                  pageable:
                    $ref: '#/components/schemas/PageableDTO'
                example:
                  content:
                    - recordId: 12345
                      memberId: "7466B6F3-5192-44D1-AA80-375767C166C5"
                      challengeId: 789
                      dtype: "CHALLENGE"
                      title: "3월 15일 보컬 도전 기록"
                      recordUrl: "https://dingading-storage.com/records/7466B6F3-5192-44D1-AA80-375767C166C5/vocals/20240315.mp3"
                      createdAt: "2024-03-15T14:30:00Z"
                    - recordId: 12346
                      memberId: "7466B6F3-5192-44D1-AA80-375767C166C5"
                      challengeId: null
                      dtype: "PRACTICE"
                      title: "3월 14일 드럼 연습"
                      recordUrl: "https://dingading-storage.com/records/7466B6F3-5192-44D1-AA80-375767C166C5/drums/20240314.mp3"
                      createdAt: "2024-03-14T10:15:00Z"
                  pageable:
                    page: 0
                    size: 10
                    totalElements: 42
                    totalPages: 5
        '404':
          $ref: '#/components/responses/NotFoundError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /challenges/{challengeId}/records:
    get:
      tags:
        - Record
      operationId: getChallengeRecords
      summary: "도전 관련 녹음 기록 조회"
      description: "특정 Challenge와 연관된 녹음 기록을 조회합니다. 티어 도전 시 제출한 녹음을 확인할 수 있는 API입니다. 페이지네이션을 지원하며, page와 size 파라미터를 통해 페이지 설정이 가능합니다."
      parameters:
        - $ref: '#/components/parameters/ChallengeId'
      x-spring-paginated: true
      deprecated: true
      responses:
        '200':
          description: "도전 관련 녹음 기록 조회 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/RecordDTO'
                        - type: object
                          example:
                            recordId: 12345
                            memberId: "7466B6F3-5192-44D1-AA80-375767C166C5"
                            challengeId: 789
                            dtype: "CHALLENGE"
                            title: "3월 15일 보컬 도전 기록"
                            recordUrl: "https://dingading-storage.com/records/7466B6F3-5192-44D1-AA80-375767C166C5/vocals/20240315.mp3"
                            createdAt: "2024-03-15T14:30:00Z"
                            songTitle: "Bohemian Rhapsody"
                            instrument: "VOCAL"
                            score:
                              beat: 85
                              tune: 78
                              tone: 92
                              total: 85
                  pageable:
                    $ref: '#/components/schemas/PageableDTO'
                example:
                  content:
                    - recordId: 12345
                      memberId: "7466B6F3-5192-44D1-AA80-375767C166C5"
                      challengeId: 789
                      dtype: "CHALLENGE"
                      title: "3월 15일 보컬 도전 기록"
                      recordUrl: "https://dingading-storage.com/records/7466B6F3-5192-44D1-AA80-375767C166C5/vocals/20240315.mp3"
                      createdAt: "2024-03-15T14:30:00Z"
                      songTitle: "Bohemian Rhapsody"
                      instrument: "VOCAL"
                      score:
                        beat: 85
                        tune: 78
                        tone: 92
                        total: 85
                  pageable:
                    page: 0
                    size: 10
                    totalElements: 3
                    totalPages: 1
        '404':
          $ref: '#/components/responses/NotFoundError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
