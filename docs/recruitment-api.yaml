openapi: 3.0.0
info:
  title: 딩가딩 Recruitment API
  version: 1.0.0
  description: "밴드 구인 공고 관련 API 명세서"
  contact:
    email: nykim.ssafy2024@gmail.com

servers:
  - url: https://localhost:8080
    description: 스프링 서버
  - url: https://localhost:8081
    description: 목 서버

tags:
  - name: Auth
    description: 사용자 인증 관련 API
  - name: Attempt
    description: 연주 시도 기록 관련 API
  - name: Analysis
    description: 연주 분석 관련 API
  - name: Band
    description: 밴드 관리 관련 API
  - name: Calendar
    description: 일정 관리 및 달력 관련 API
  - name: ChatRoom
    description: 채팅방 및 메시지 관련 API
  - name: Follow
    description: 사용자 팔로우 관련 API
  - name: Instrument
    description: 악기 정보 관련 API
  - name: LiveHouse
    description: 라이브하우스 관련 API
  - name: Member
    description: 회원 관리 관련 API
  - name: MemberRank
    description: 회원 랭크 정보 관련 API
  - name: MemberTierLog
    description: 회원 티어 변동 이력 관련 API
  - name: Notification
    description: 알림 관리 관련 API
  - name: RankMatching
    description: 랭크 매칭 관련 API
  - name: Record
    description: 녹음 기록 관련 API
  - name: Recruitment
    description: 밴드 구인 공고 관련 API
  - name: Song
    description: 곡 관리 관련 API
  - name: SongByInstrument
    description: 악기별 곡 관련 API
  - name: SongInstrumentPack
    description: 곡 팩 관련 API
  - name: Tier
    description: 티어 시스템 관련 API

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "JWT 인증 토큰을 사용합니다. 예: Bearer {token}"

  parameters:
    # 경로 파라미터 모음
    BandId:
      name: bandId
      in: path
      description: "밴드 ID"
      required: true
      schema:
        type: integer
        format: int64

    RecruitmentId:
      name: recruitmentId
      in: path
      description: "구인 공고 ID"
      required: true
      schema:
        type: integer
        format: int64

    InstrumentId:
      name: instrumentId
      in: path
      description: "모집 악기 ID"
      required: true
      schema:
        type: integer
        format: int64

    ApplicantId:
      name: applicantId
      in: path
      description: "지원자 ID"
      required: true
      schema:
        type: string
        format: uuid

    RecruitmentStatusParam:
      name: recruitmentStatus
      in: path
      description: "구인 공고 상태"
      required: true
      schema:
        type: string
        enum: [RECRUITING, COMPLETED]

    # 쿼리 파라미터 모음
    PageParam:
      name: page
      in: query
      description: "페이지 번호 (0부터 시작)"
      required: false
      schema:
        type: integer
        default: 0

    SizeParam:
      name: size
      in: query
      description: "페이지 크기"
      required: false
      schema:
        type: integer
        default: 10

    SortParam:
      name: sort
      in: query
      description: "정렬 기준 (필드명,정렬방향)"
      required: false
      schema:
        type: string
        default: "id,desc"

  schemas:
    # 에러 응답 스키마
    ProblemDetail:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string

    # 열거형 정의
    InstrumentEnum:
      type: string
      enum: [VOCAL, GUITAR, DRUM, BASS]
      description: "악기 유형"

    TierEnum:
      type: string
      enum: [UNRANKED, IRON, BRONZE, SILVER, GOLD, PLATINUM, DIAMOND]
      description: "티어 레벨"

    RecruitmentStatusEnum:
      type: string
      enum: [RECRUITING, COMPLETED]
      description: "구인 공고 상태"

    # 기본 DTO 스키마
    RecruitmentDTO:
      type: object
      properties:
        bandRecruitmentId:
          type: integer
          format: int64
          description: "구인 공고 ID"
        bandId:
          type: integer
          format: int64
          description: "밴드 ID"
        title:
          type: string
          description: "공고 제목"
        description:
          type: string
          description: "공고 설명"
        auditionDate:
          type: string
          format: date-time
          description: "오디션 날짜 및 시간"
        status:
          $ref: '#/components/schemas/RecruitmentStatusEnum'
        auditionSongId:
          type: integer
          format: int64
          description: "오디션 곡 ID"
        auditionSongTitle:
          type: string
          description: "오디션 곡 제목"
        createdAt:
          type: string
          format: date-time
          description: "생성 일시"
        updatedAt:
          type: string
          format: date-time
          description: "수정 일시"
      required:
        - bandRecruitmentId
        - bandId
        - title
        - auditionDate
        - auditionSongId
        - status

    RecruitmentInstrumentDTO:
      type: object
      properties:
        bandRecruitmentInstrumentsId:
          type: integer
          format: int64
          description: "모집 악기 ID"
        bandRecruitmentId:
          type: integer
          format: int64
          description: "구인 공고 ID"
        instrument:
          $ref: '#/components/schemas/InstrumentEnum'
        requiredTier:
          $ref: '#/components/schemas/TierEnum'
        maxSize:
          type: integer
          description: "모집 인원 수"
        currentApplicants:
          type: integer
          description: "현재 지원자 수"
      required:
        - bandRecruitmentInstrumentsId
        - bandRecruitmentId
        - instrument
        - requiredTier
        - maxSize

    ApplicantDTO:
      type: object
      properties:
        bandRecruitmentApplicantId:
          type: integer
          format: int64
          description: "지원자 ID"
        bandRecruitmentInstrumentsId:
          type: integer
          format: int64
          description: "모집 악기 ID"
        applicantId:
          type: string
          format: uuid
          description: "회원 ID"
        nickname:
          type: string
          description: "회원 닉네임"
        profileImgUrl:
          type: string
          description: "회원 프로필 이미지 URL"
        instrument:
          $ref: '#/components/schemas/InstrumentEnum'
        tier:
          $ref: '#/components/schemas/TierEnum'
        applyDate:
          type: string
          format: date-time
          description: "지원 일시"
      required:
        - bandRecruitmentApplicantId
        - bandRecruitmentInstrumentsId
        - applicantId
        - instrument

    # 페이지네이션 관련 스키마
    PageableDTO:
      type: object
      properties:
        page:
          type: integer
          description: "현재 페이지 번호"
        size:
          type: integer
          description: "페이지 크기"
        totalElements:
          type: integer
          description: "전체 요소 수"
        totalPages:
          type: integer
          description: "전체 페이지 수"
      required:
        - page
        - size
        - totalElements
        - totalPages

  # 요청 본문 정의
  requestBodies:
    CreateRecruitmentRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
                description: "공고 제목"
              description:
                type: string
                description: "공고 설명"
              auditionDate:
                type: string
                format: date-time
                description: "오디션 날짜 및 시간"
              auditionSongId:
                type: integer
                format: int64
                description: "오디션 곡 ID"
            required:
              - title
              - auditionDate
              - auditionSongId

    UpdateRecruitmentRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
                description: "공고 제목"
              description:
                type: string
                description: "공고 설명"
              auditionDate:
                type: string
                format: date-time
                description: "오디션 날짜 및 시간"
              auditionSongId:
                type: integer
                format: int64
                description: "오디션 곡 ID"
            required:
              - title
              - auditionDate
              - auditionSongId

    AddRecruitmentInstrumentRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              instrument:
                $ref: '#/components/schemas/InstrumentEnum'
              requiredTier:
                $ref: '#/components/schemas/TierEnum'
              maxSize:
                type: integer
                description: "모집 인원 수"
                default: 1
            required:
              - instrument
              - requiredTier
              - maxSize

    ApplyRecruitmentRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              applicantId:
                type: string
                format: uuid
                description: "지원자 ID"
              bandRecruitmentInstrumentsId:
                type: integer
                format: int64
                description: "지원할 악기 포지션 ID"
            required:
              - applicantId
              - bandRecruitmentInstrumentsId

  # 응답 정의
  responses:
    # 성공 응답
    SuccessNoContent:
      description: "성공적으로 처리되었습니다."
      content: {}

    SuccessAccepted:
      description: "성공적으로 승인되었습니다."

    SuccessRejected:
      description: "성공적으로 거절되었습니다."

    # 비즈니스 응답
    RecruitmentResponse:
      description: "구인 공고 정보"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RecruitmentDTO'

    RecruitmentInstrumentResponse:
      description: "모집 악기 정보"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RecruitmentInstrumentDTO'

    RecruitmentInstrumentListResponse:
      description: "모집 악기 목록"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RecruitmentInstrumentDTO'

    ApplicantResponse:
      description: "지원자 정보"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApplicantDTO'

    ApplicantListResponse:
      description: "지원자 목록"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ApplicantDTO'

    # 에러 응답
    NotFoundException:
      description: "요청한 리소스를 찾을 수 없습니다."
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ProblemDetail'
              - type: object
                properties:
                  title:
                    type: string
                    example: "리소스를 찾을 수 없습니다."

    BadRequestException:
      description: "잘못된 요청입니다."
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ProblemDetail'
              - type: object
                properties:
                  title:
                    type: string
                    example: "잘못된 요청입니다."

    UnauthorizedException:
      description: "인증되지 않은 요청입니다."
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ProblemDetail'
              - type: object
                properties:
                  title:
                    type: string
                    example: "인증되지 않은 요청입니다."

    ForbiddenException:
      description: "접근 권한이 없습니다."
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ProblemDetail'
              - type: object
                properties:
                  title:
                    type: string
                    example: "접근 권한이 없습니다."

security:
  - BearerAuth: []

paths:
  /bands/{bandId}/recruitments:
    get:
      tags:
        - Recruitment
      operationId: getBandRecruitments
      summary: "밴드 구인 공고 목록 조회"
      description: "밴드의 구인 공고를 조회합니다."
      parameters:
        - $ref: '#/components/parameters/BandId'
      responses:
        '200':
          $ref: '#/components/responses/RecruitmentResponse'
        '404':
          $ref: '#/components/responses/NotFoundException'

    post:
      tags:
        - Recruitment
      operationId: createBandRecruitment
      summary: "밴드 구인 공고 등록"
      description: "밴드에 새로운 구인 공고를 등록합니다. 제목, 설명, 오디션 날짜, 오디션 곡 등 포함"
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/BandId'
      requestBody:
        $ref: '#/components/requestBodies/CreateRecruitmentRequest'
      responses:
        '201':
          $ref: '#/components/responses/RecruitmentResponse'
        '400':
          $ref: '#/components/responses/BadRequestException'
        '403':
          $ref: '#/components/responses/ForbiddenException'
        '404':
          $ref: '#/components/responses/NotFoundException'

  /bands/{bandId}/recruitments/{recruitmentId}:
    put:
      tags:
        - Recruitment
      operationId: updateBandRecruitment
      summary: "밴드 구인 공고 수정"
      description: "특정 구인 공고 정보를 수정합니다."
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/BandId'
        - $ref: '#/components/parameters/RecruitmentId'
      requestBody:
        $ref: '#/components/requestBodies/UpdateRecruitmentRequest'
      responses:
        '200':
          $ref: '#/components/responses/RecruitmentResponse'
        '400':
          $ref: '#/components/responses/BadRequestException'
        '403':
          $ref: '#/components/responses/ForbiddenException'
        '404':
          $ref: '#/components/responses/NotFoundException'

    delete:
      tags:
        - Recruitment
      operationId: deleteBandRecruitment
      summary: "밴드 구인 공고 삭제"
      description: "특정 구인 공고를 삭제합니다."
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/BandId'
        - $ref: '#/components/parameters/RecruitmentId'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '403':
          $ref: '#/components/responses/ForbiddenException'
        '404':
          $ref: '#/components/responses/NotFoundException'

  /bands/{bandId}/recruitments/{recruitmentId}/{recruitmentStatus}:
    post:
      tags:
        - Recruitment
      operationId: updateRecruitmentStatus
      summary: "밴드 구인 공고 상태 변경"
      description: "밴드 구인 프로세스 상태를 변경합니다 (모집 중, 모집 완료)"
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/BandId'
        - $ref: '#/components/parameters/RecruitmentId'
        - $ref: '#/components/parameters/RecruitmentStatusParam'
      responses:
        '200':
          $ref: '#/components/responses/RecruitmentResponse'
        '400':
          $ref: '#/components/responses/BadRequestException'
        '403':
          $ref: '#/components/responses/ForbiddenException'
        '404':
          $ref: '#/components/responses/NotFoundException'

  /bands/{bandId}/recruitments/{recruitmentId}/instruments:
    get:
      tags:
        - RecruitmentInstrument
      operationId: getRecruitmentInstruments
      summary: "구인 공고 모집 악기 목록 조회"
      description: "구인 공고의 모집 악기 포지션 정보를 조회합니다. 각 포지션별 요구 티어, 모집 인원 포함"
      parameters:
        - $ref: '#/components/parameters/BandId'
        - $ref: '#/components/parameters/RecruitmentId'
      responses:
        '200':
          $ref: '#/components/responses/RecruitmentInstrumentListResponse'
        '404':
          $ref: '#/components/responses/NotFoundException'

    post:
      tags:
        - RecruitmentInstrument
      operationId: addRecruitmentInstrument
      summary: "구인 공고 악기 포지션 추가"
      description: "구인 공고에 새로운 악기 포지션을 추가합니다."
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/BandId'
        - $ref: '#/components/parameters/RecruitmentId'
      requestBody:
        $ref: '#/components/requestBodies/AddRecruitmentInstrumentRequest'
      responses:
        '201':
          $ref: '#/components/responses/RecruitmentInstrumentResponse'
        '400':
          $ref: '#/components/responses/BadRequestException'
        '403':
          $ref: '#/components/responses/ForbiddenException'
        '404':
          $ref: '#/components/responses/NotFoundException'

  /bands/{bandId}/recruitments/{recruitmentId}/instruments/{instrumentId}:
    delete:
      tags:
        - RecruitmentInstrument
      operationId: removeRecruitmentInstrument
      summary: "구인 공고 악기 포지션 제거"
      description: "구인 공고에서 특정 악기 포지션을 제거합니다."
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/BandId'
        - $ref: '#/components/parameters/RecruitmentId'
        - $ref: '#/components/parameters/InstrumentId'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '403':
          $ref: '#/components/responses/ForbiddenException'
        '404':
          $ref: '#/components/responses/NotFoundException'

  /bands/{bandId}/recruitments/{recruitmentId}/applicants:
    get:
      tags:
        - RecruitmentApplicant
      operationId: getRecruitmentApplicants
      summary: "구인 공고 지원자 목록 조회"
      description: "구인 공고에 지원한 지원자 목록을 조회합니다."
      parameters:
        - $ref: '#/components/parameters/BandId'
        - $ref: '#/components/parameters/RecruitmentId'
      responses:
        '200':
          $ref: '#/components/responses/ApplicantListResponse'
        '403':
          $ref: '#/components/responses/ForbiddenException'
        '404':
          $ref: '#/components/responses/NotFoundException'

  /bands/recruitments/{recruitmentId}/apply:
    post:
      tags:
        - RecruitmentApplicant
      operationId: applyRecruitment
      summary: "구인 공고 지원"
      description: "구인 공고에 지원합니다. 지원자 ID, 악기 포지션 포함"
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/RecruitmentId'
      requestBody:
        $ref: '#/components/requestBodies/ApplyRecruitmentRequest'
      responses:
        '201':
          $ref: '#/components/responses/ApplicantResponse'
        '400':
          $ref: '#/components/responses/BadRequestException'
        '404':
          $ref: '#/components/responses/NotFoundException'

  /bands/recruitments/{recruitmentId}/applicants/{applicantId}:
    delete:
      tags:
        - RecruitmentApplicant
      operationId: cancelRecruitmentApplication
      summary: "구인 공고 지원 취소"
      description: "구인 공고 지원을 취소합니다."
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/RecruitmentId'
        - $ref: '#/components/parameters/ApplicantId'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '403':
          $ref: '#/components/responses/ForbiddenException'
        '404':
          $ref: '#/components/responses/NotFoundException'

  /bands/{bandId}/recruitments/{recruitmentId}/accept/{applicantId}:
    post:
      tags:
        - RecruitmentApplicant
      operationId: acceptApplicant
      summary: "지원자 승인"
      description: "특정 지원자의 밴드 가입을 승인합니다."
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/BandId'
        - $ref: '#/components/parameters/RecruitmentId'
        - $ref: '#/components/parameters/ApplicantId'
      responses:
        '200':
          $ref: '#/components/responses/SuccessAccepted'
        '400':
          $ref: '#/components/responses/BadRequestException'
        '403':
          $ref: '#/components/responses/ForbiddenException'
        '404':
          $ref: '#/components/responses/NotFoundException'

  /bands/{bandId}/recruitments/{recruitmentId}/reject/{applicantId}:
    post:
      tags:
        - RecruitmentApplicant
      operationId: rejectApplicant
      summary: "지원자 거절"
      description: "특정 지원자의 밴드 가입을 거절합니다."
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/BandId'
        - $ref: '#/components/parameters/RecruitmentId'
        - $ref: '#/components/parameters/ApplicantId'
      responses:
        '200':
          $ref: '#/components/responses/SuccessRejected'
        '403':
          $ref: '#/components/responses/ForbiddenException'
        '404':
          $ref: '#/components/responses/NotFoundException'